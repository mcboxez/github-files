此时就存储页面上的值时机不对，为什么呢？因为在网络不好的情况下，有可能初次请求的链接还没有返回数据，如果是这种情况 content 的值就为空，什么都没有。仔细想一想，是不是这样？

为了能够在前后两次数据都返回的情况下再比较内容，我们就需要拓展上一个测试套件。

通过上一个测试套件我们知道，当done函数执行完毕后，it测试套件就能监听到此事件，从而开始执行测试。利用这个原理，我们可以使用嵌套loadFeed函数的方法来完成此次测试，伪代码如下：

var 内容1,
    内容2;
beforeEach(function(done) {
    loadFeed(1, function() { // 匿名函数，当loadFeed返回数据后执行
        // 在这里获取内容1
        // 获取完毕后开始请求新的数据
        loadFeed(0, function() {
            // 获取内容2
            // 执行done，通知下方it开始测试（因为到现在为止，两次请求的数据才真正全部返回）
            done()
        });
    });
});

it("load container1", function() {
    // 比较
});